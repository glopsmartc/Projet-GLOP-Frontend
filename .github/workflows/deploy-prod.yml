name: CI/CD Pipeline Prod

on:
  push:
    branches:
      - main

env:
  IP_ADDRESS_FRONT: ${{ secrets.IP_ADDRESS_FRONT }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js for Angular + Cypress frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node-
        

      # Install frontend dependencies
      - name: Install Frontend Dependencies
        working-directory: .
        run: npm install

      # Run Jasmine tests (via Angular CLI)
      - name: Run Jasmine Tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless

      # Docker configuration
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/glop-frontend:${{ github.sha }}

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Install OpenVPN Client
        run: sudo apt-get update && sudo apt-get install openvpn

      - name: Download VPN Configuration
        run: |
          wget https://infotuto.univ-lille.fr/fileadmin/user_upload/infotuto/images/DSI/Fichiers_telechargeables/Clients_VPN/ULILLE_VPN_ETUDIANT_Linux_v4.zip
          unzip ULILLE_VPN_ETUDIANT_Linux_v4.zip

      - name: OpenVPN-Connect
        uses: kota65535/github-openvpn-connect-action@v2.1.0
        with:
          config_file: ULILLE_VPN_ETU_TCP_v4_Linux.ovpn
          username: ${{ secrets.VPN_USERNAME }}
          password: ${{ secrets.VPN_PASSWORD }}

      - name: Create ma-paire.pem file
        run: echo "${{ secrets.MA_PAIRE_PEM }}" > ma-paire.pem

      - name: Set permissions for private key
        run: chmod 600 ma-paire.pem

      - name: Stop and Remove Existing Container
        run: |
         ssh -i ma-paire.pem -o StrictHostKeyChecking=no ubuntu@$IP_ADDRESS_FRONT 'sudo docker stop frontend-container || true && sudo docker rm frontend-container || true'

      - name: Pull Frontned Docker Image
        run: |
          ssh -i ma-paire.pem -o StrictHostKeyChecking=no ubuntu@$IP_ADDRESS_FRONT 'sudo docker pull ${{ secrets.DOCKER_USERNAME }}/glop-frontend:${{ github.sha }}'

      - name: Run New Frontend Container
        run: |
            ssh -i ma-paire.pem -o StrictHostKeyChecking=no ubuntu@$IP_ADDRESS_FRONT 'sudo docker run -d --name frontend-container -e API_BASE_URL="http://172.28.100.191:80" -e API_BASE_URL_CONTRAT="http://172.28.100.191:8082" -e API_BASE_URL_ASSISTANCE="http://172.28.100.191:8083" -p 80:4200 ${{ secrets.DOCKER_USERNAME }}/glop-frontend:${{ github.sha }}'
        
